/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FRAMES;

import java.util.Arrays;
import javax.swing.JOptionPane;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
/**
 *
 * @author eduardot
 */
public class ComienzoExp extends javax.swing.JFrame {
    boolean ExpConfirm = false;
    boolean OptionConfirm = false;
    String ExpType = "T";
    float[]TempDato = new float[10000];
    float[]TimeDato = new float[10000];
    int count=0;
    String VariableX="X"; 
    String VariableY="Y"; 
    String Title="";

    /**
     * Creates new form TempStart
     */
    public ComienzoExp() {
        initComponents();
    }//ComienzoExp()
    
    public ComienzoExp(String ExpType) {
        initComponents();
        this.ExpType = ExpType;
        if (this.ExpType.equals("T")==true){
            jLabel1.setText("Experimento de Temperatura");
        }//if 
        else if (this.ExpType.equals("C")==true){
            jLabel1.setText("Experimento de Caida Libre");
        }//else if 
    }//ComienzoExp (String ExpType)
    
    public ComienzoExp(String ExpType, boolean OptionConfirm) {
        initComponents();
        this.OptionConfirm = OptionConfirm;
        this.ExpType = ExpType;
        if (this.ExpType.equals("T")==true){
            jLabel1.setText("Experimento de Temperatura");
        }//if 
        else if (this.ExpType.equals("C")==true){
            jLabel1.setText("Experimento de Caida Libre");
        }//else if 
    }//ComienzoExp (String ExpType)
    public ComienzoExp(boolean ExpConfirm, float[]TempDato, float[]TimeDato, int count,
                     String VariableX, String VariableY, String Title,String ExpType){
        initComponents();
        this.ExpConfirm = ExpConfirm;
        this.TempDato = Arrays.copyOf(TempDato, TempDato.length);
        this.TimeDato = Arrays.copyOf(TimeDato, TimeDato.length);
        this.count = count;
        this.VariableX = VariableX;
        this.VariableY = VariableY;
        this.ExpType = ExpType;
        this.Title = Title;
        if (ExpConfirm == true){
            this.StatusLabel.setText("Si");
            this.GraphicsBtn.setEnabled(true);
            this.SeeTable.setEnabled(true);
            this.UploadToDB1.setEnabled(true);
            this.StartBtn.setEnabled(true);
        }//if 
        if (this.ExpType.equals("T")==true){
            jLabel1.setText("Experimento de Temperatura");
        }//if 
        else if (this.ExpType.equals("C")==true){
            jLabel1.setText("Experimento de Caida Libre");
        }//else if 
    }//public ComienzoExp

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        StartBtn = new javax.swing.JButton();
        GraphicsBtn = new javax.swing.JButton();
        SeeTable = new javax.swing.JButton();
        ChangeSettings = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        StatusLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        ExitBtn = new javax.swing.JButton();
        UploadToDB1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("PMingLiU-ExtB", 1, 36)); // NOI18N
        jLabel1.setText("Práctica de Temperatura");

        StartBtn.setText("Iniciar");
        StartBtn.setEnabled(false);
        StartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartBtnActionPerformed(evt);
            }
        });

        GraphicsBtn.setText("Ver Gráfico");
        GraphicsBtn.setEnabled(false);
        GraphicsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphicsBtnActionPerformed(evt);
            }
        });

        SeeTable.setText("Ver Tabla");
        SeeTable.setEnabled(false);
        SeeTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeeTableActionPerformed(evt);
            }
        });

        ChangeSettings.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N
        ChangeSettings.setText("Cambiar ajustes del experimento");
        ChangeSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeSettingsActionPerformed(evt);
            }
        });

        jLabel2.setText("Hay datos de experimento:");

        StatusLabel.setText("No");

        ExitBtn.setText("Salir");
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });

        UploadToDB1.setText("Guardar en hoja de calculo");
        UploadToDB1.setEnabled(false);
        UploadToDB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadToDB1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 61, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(88, 88, 88))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(StartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SeeTable, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ChangeSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(GraphicsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(UploadToDB1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(175, 175, 175))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(StatusLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(359, 359, 359)
                                        .addComponent(ExitBtn)))
                                .addGap(59, 59, 59))))))
            .addComponent(jSeparator2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GraphicsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SeeTable, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(ChangeSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UploadToDB1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(StatusLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitBtn))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartBtnActionPerformed
      int Response = JOptionPane.YES_OPTION;
      if (ExpConfirm == true){
          Response = JOptionPane.showConfirmDialog(null,"Si se inicia un nuevo experimento todos los datos"
                                                    + "que no hayan sido guardados se perderan.\n"
                                                    +"Desea iniciar un nuevo experimento?","ATENCION!",
                                                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
      }//if 
      if (Response == JOptionPane.YES_OPTION){
           if (this.ExpType.equals("T")==true){
                GraficaXYTemp graf = new GraficaXYTemp();
                if (OptionConfirm==true){
                    graf = new GraficaXYTemp(true);
                }
                graf.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                graf.setLocationRelativeTo(null);
                graf.setVisible(true);
                this.dispose();
             }// if 
           else if (this.ExpType.equals("C")==true){
                GraficaCaida graf = new GraficaCaida();
                graf.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                graf.setLocationRelativeTo(null);
                graf.setVisible(true);
                this.dispose();
           }//else if 
      }//IF JoptionPane
    }//GEN-LAST:event_StartBtnActionPerformed

    private void GraphicsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphicsBtnActionPerformed
        // TODO add your handling code here:
          if (this.ExpType.equals("T")==true){ 
                GraficaXYNoConnect Graph = new GraficaXYNoConnect(TempDato,TimeDato,count,
                                                                 VariableX,VariableY,Title,
                                                                  ExpType);
                Graph.setLocationRelativeTo(null);
                Graph.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                Graph.setAlwaysOnTop(true);
                Graph.setVisible(true);
          }//if
          else if (this.ExpType.equals("C")==true){
               GraficaCaidaNoConnect Graph = new GraficaCaidaNoConnect(TempDato,TimeDato,count,
                                                                 VariableX,VariableY,Title,
                                                                  ExpType);
                Graph.setLocationRelativeTo(null);
                Graph.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                Graph.setAlwaysOnTop(true);
                Graph.setVisible(true);
           }//else if 
    }//GEN-LAST:event_GraphicsBtnActionPerformed

    private void SeeTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeeTableActionPerformed
        // TODO add your handling code here:
            newTablaDatos TablaData = new newTablaDatos(count,TempDato,TimeDato,
                                                        VariableX,VariableY,Title);
            TablaData.setResizable(false);
            TablaData.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            TablaData.setAlwaysOnTop(true);
            TablaData.setLocationRelativeTo(null);
            TablaData.setVisible(true);
    }//GEN-LAST:event_SeeTableActionPerformed

    private void ChangeSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeSettingsActionPerformed
        // TODO add your handling code here:
          String Message = "Desea cambiar los ajustes del experimento?";
          if (ExpConfirm==true){
              Message = Message + "\n" + "Estos cambios se veran reflejados cuando se realize un nuevo experimento";
          }//if ExpConfirm == true 
          int Option = JOptionPane.showConfirmDialog(null,Message,"ATENCION!",
                                                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
          if (Option == JOptionPane.YES_OPTION){
              if (ExpType.equals("T")==true){
                  OptionTEMP opcion = new OptionTEMP();
                  if (OptionConfirm==true){
                      opcion = new OptionTEMP(true);
                  }//if
                  opcion.pack();
                  opcion.setResizable(false);
                  opcion.setLocationRelativeTo(null);
                  opcion.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                  opcion.setAlwaysOnTop(true);
                  opcion.setVisible(true);
                  OptionConfirm=true;
                  StartBtn.setEnabled(true);
              }//if ExpType 
              else{
                    OptionTIME opcion = new OptionTIME();
                    if (OptionConfirm==true){
                        opcion = new OptionTIME(true);
                    }//if 
                    opcion.pack();
                    opcion.setResizable(false);
                    opcion.setLocationRelativeTo(null);
                    opcion.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                    opcion.setAlwaysOnTop(true);
                    opcion.setVisible(true);
                  OptionConfirm=true;
                  StartBtn.setEnabled(true);
              }//else 
          }//if OptionPane
    }//GEN-LAST:event_ChangeSettingsActionPerformed

    private void UploadToDB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadToDB1ActionPerformed
        // TODO add your handling code here:
        String Message = "¿Desea guardar los datos del experimento?";
        int Opcion = JOptionPane.showConfirmDialog(null,Message,"Atención!",
                                                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (Opcion == JOptionPane.YES_OPTION){
            SaveExpData();
        }//if 
    }//GEN-LAST:event_UploadToDB1ActionPerformed
    
    private void SaveExpData(){
        String Header = Title;
        String ColumnName = VariableX+","+VariableY;
        float PromedioX = 0;
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("c://Users//eduardot//Desktop"));
        int Result = chooser.showSaveDialog(null);
        try (FileWriter file = new FileWriter(chooser.getSelectedFile()+".csv")){
            file.write(Header+"\n");
            file.write(ColumnName+"\n");
            for (int i=0; i<count; i++){
                String ValorX = String.valueOf(TempDato[i]);
                String ValorY = String.valueOf(TimeDato[i]);
                PromedioX = TempDato[i] + PromedioX;
                file.write(ValorX+","+ValorY+"\n");
            }//for 
            PromedioX = PromedioX/count;
            file.write("Promedio de "+VariableX+":"+","+String.valueOf(PromedioX)+"\n");
            file.close();
        } //try
        catch (IOException ex) {
            this.setAlwaysOnTop(false);
            JOptionPane.showMessageDialog(null,"Ocurrió un error al guardar el archivo","Error",
                                          JOptionPane.WARNING_MESSAGE);
        } //catch
        catch(ArrayIndexOutOfBoundsException ex){
            JOptionPane.showMessageDialog(null,"Ocurrió un error inesperado","Error",
                                          JOptionPane.WARNING_MESSAGE);
        }//catch
        finally{
            if (Result == JFileChooser.APPROVE_OPTION){
              JOptionPane.showMessageDialog(null,"El Archivo fue guardado exitosamente!","Aviso",
                                          JOptionPane.INFORMATION_MESSAGE);
            }
            if (Result == JFileChooser.CANCEL_OPTION){
              JOptionPane.showMessageDialog(null,"Se cancelo el guardado del archivo!","Aviso",
                                          JOptionPane.INFORMATION_MESSAGE);
            }
            if (Result == JFileChooser.ERROR_OPTION){
              JOptionPane.showMessageDialog(null,"Ocurrio un Error inesperado!","Aviso",
                                          JOptionPane.INFORMATION_MESSAGE);
            }
        }//finaly
    }//SaveExpData
    
    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        // TODO add your handling code here:
        String Message = "¿Desea salir de esta ventana?";
        if (ExpConfirm == true) Message = Message +"\n"+"Todos los datos no guardados se perderán";
        int Opcion = JOptionPane.showConfirmDialog(null,Message,"Atención!",
                                                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (Opcion == JOptionPane.YES_OPTION){
            this.dispose();
        }//if 
    }//GEN-LAST:event_ExitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComienzoExp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComienzoExp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComienzoExp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComienzoExp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComienzoExp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChangeSettings;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JButton GraphicsBtn;
    private javax.swing.JButton SeeTable;
    private javax.swing.JButton StartBtn;
    private javax.swing.JLabel StatusLabel;
    private javax.swing.JButton UploadToDB1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
